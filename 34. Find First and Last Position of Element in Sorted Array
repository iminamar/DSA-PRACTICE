class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int low = 0;
        int n = nums.size();
        int high = n-1;
        vector<int> ans(2,-1);
        while(low<=high)
        {
            int mid = low + (high - low) / 2;
            if(nums[mid]==target)
            {
                ans[0] = mid;
                // checking for elements in left side
                high = mid -1;
            }
            else if(nums[mid]>target)
            {
                high = mid -1;
            }
            else
            {
                low = mid +1;
            }
        }
        low = 0; high = n-1;
        while(low<=high)
        {
            int mid = low + (high - low) / 2;
            if(nums[mid]==target)
            {
                ans[1] = mid;
                // checking for elements in right side
                low = mid + 1;
            }
            else if(nums[mid]<target)
            {
                low = mid + 1;
            }
            else
            {
                high = mid -1;
            }
        }
        return ans;
        
    }
};
